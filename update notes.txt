Vesrion: #.# (date on file (at the general end of version development): dd-mm-yyyy)

squish 1.1 (13-03-2022)
Initial game was made in a few days
A few modifications were given a bit later on 02-04-2022
Uses text file for level layout
Does not have controller support
Controllers can still be used through steam
Press enter to remap controls of players
NOTE: This version has fullscreen but without blocking you from opening other windows above it

squish 2.1 (31-03-2022)
Implements text files for page control
Gives initial looks of syntax for files
Outlines the program

squish 2.2.0 (09-04-2022)
Added more pages and ability to add players
List implementation

squish 2.2.1 (18-06-2022)
Building functions
Levels are now playable from text files

squish 2.2.2 (28-07-2022)
Added level editor
Initial snake and scythe

squish 2.3 (07-08-2022)
Added scythe
Added tron
Unique player through secrets additions
Added boosts
Seperated settings and player menus
Slider implementation

squish 2.4 (10-08-2022)
First release (release 0.1) of the game
Created README file refering to the pygame LGPL
Added pygame library files to directory for distribution in complience with the LGPL

squish 2.5 (12-08-2022)
(release 0.2)
Dirty rectangle updating so that the whole screen is not updated every frame
Adjustable resolution
Added play random button to tron results page
Fixed bugs with pac man collision due to rounding errors
Fixed pac man controls

squish 2.6 (17-08-2022)
Fixed fps update rectangle size to be correct for tron and other sized levels
Fixed Game and Watch update rectangle over the last pos
Made padding slightly larger in update rectangles to (unconfirmed) remove risidual blits during screen wrapping
Fixed update rectangles for dead arrows, fire, and zaps persisting after player death
Fixed players stretching wide on the moon level (unconfirmed) by checking size compared to base size in the squish function
The fps sometimes is captured in a screenshot (may have been part of fps update rectangle issue)
Now show the red line above blocks, still below players
Moved level data setup continue/done and back cursor positions
Now rounds player positions to integers in level editor
Changed blocks to wrap when appropriate
Allows editor to click on the wrapped part of a block
Added bowser
Added ceiling on levels without vertical looping
Added pause on entrance into pause or result pages
Fixed eraser in level editor wrapping when it shouldn't
Fixed level editor level size bugs with eraser and update rectangles
Fixed issues with invincibility rectangles appearance on players during play

Added Teams mode
	Select number of teams in the level select
	Added team setup page for selecting team
	Autofills after all players choose a team by randomly picking team with least players
	Maintain the same teams even after closing the game
	5 lists in a + shape
	The center is no team/team 0
	Left  is 1 red
	Right is 2 blue
	Up    is 3 green
	Down  is 4 purple
	Player pressed direction to select team and this does not affect menu navigation
	Player can affect menu navigation after selecting a team
	Press the shield/ability button to deselect team
	Give players vertical bands on the side to match their team color
	End game when 1 team is left
	Show that team's color name on the victory screen
	This is also implemented for tron and makes the accent color the team color

squish 2.7 (20-08-2022)
Added ghost mode after death in squish
	Check block collisions
	Check vertical collisions when going down but don't interfere with alive players
	Don't squish or be squished
	Don't take boosts, they do retain boosts they have on death until they run out
	Get thrown out of the abyss when the level has no vertical looping
	Make the ghosts display behind players, boosts, and abilities
	Make the ghosts translucent
	You can still use abilities but it doesn't do anything
Added computers
	Select is_cpu button in the add player page
	The cpu has the same inputs as a player so cannot play unfairly except in seeing players, boosts, and blocks that might be offscreen
	The cpu looks at all players and boosts and weighs all the threats and potential kills
	If it has good boosts it's more likely to pursue a player
	If the enemy has good boosts it is less likely to pursue that player and is more likely to flee from that player
	The distance from players and boosts also is weighed
	It then picks one to target with highly likelyhood for targets with higher total weight
	It also assess the danger of the void and tries to not die
	It is really bad at this on levels with many small platforms above the void
	Having the jump boost makes it less afraid of the void

squish 2.8 (TBD)
	Fixed float values of x coordinate of duplicated things in the level editor when it should be int values
	Fixed slider being used when pressing the lmb off the slider then moving onto the slider
